apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: rulechecks.caelus.io
spec:
  group: caelus.io
  names:
    kind: RuleCheck
    listKind: RuleCheckList
    plural: rulechecks
    singular: rulecheck
  scope: Cluster
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: RuleCheck is a specification for a RuleCheck resource
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: RuleCheckSpec is the spec for a RuleCheck resource
              properties:
                checkInterval:
                  description: CheckInterval describes the interval to trigger detection
                  format: int64
                  type: integer
                handleInterval:
                  description: HandleInterval describes the interval to handle conflicts
                    after detecting abnormal result
                  format: int64
                  type: integer
                metrics:
                  items:
                    type: string
                  type: array
                name:
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                priority:
                  format: int32
                  type: integer
                recoverInterval:
                  description: RecoverInterval describes the interval to recover conflicts
                    after detecting normal result
                  format: int64
                  type: integer
                recoverRules:
                  items:
                    description: DetectActionRules define detectors and actions
                    properties:
                      actions:
                        items:
                          description: DetectAction define detector config
                          properties:
                            args:
                              type: string
                            name:
                              type: string
                          required:
                            - args
                            - name
                          type: object
                        type: array
                      detects:
                        items:
                          description: DetectAction define detector config
                          properties:
                            args:
                              type: string
                            name:
                              type: string
                          required:
                            - args
                            - name
                          type: object
                        type: array
                    type: object
                  type: array
                rules:
                  items:
                    description: DetectActionRules define detectors and actions
                    properties:
                      actions:
                        items:
                          description: DetectAction define detector config
                          properties:
                            args:
                              type: string
                            name:
                              type: string
                          required:
                            - args
                            - name
                          type: object
                        type: array
                      detects:
                        items:
                          description: DetectAction define detector config
                          properties:
                            args:
                              type: string
                            name:
                              type: string
                          required:
                            - args
                            - name
                          type: object
                        type: array
                    type: object
                  type: array
                type:
                  type: string
              required:
                - checkInterval
                - handleInterval
                - metrics
                - name
                - recoverInterval
                - rules
                - type
              type: object
            status:
              description: RuleCheckStatus is the status for a RuleCheck resource
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: cgroupnotifies.caelus.io.caelus.io
spec:
  group: caelus.io.caelus.io
  names:
    kind: CgroupNotify
    listKind: CgroupNotifyList
    plural: cgroupnotifies
    singular: cgroupnotify
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CgroupNotify is a specification for a CgroupNotify resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CgroupNotifySpec is the spec for a CgroupNotify resource
            properties:
              memory_cgroup:
                description: MemoryNotifyConfig describe memory cgroup notify
                properties:
                  pressures:
                    items:
                      description: MemoryPressureNotifyConfig describe memory.pressure_level
                        notify data
                      properties:
                        cgroups:
                          items:
                            type: string
                          type: array
                        count:
                          description: assign event number in the duration time
                          type: integer
                        duration:
                          description: assign time duration the pressure has kept
                          format: int64
                          type: integer
                        pressure_level:
                          type: string
                      required:
                      - cgroups
                      - count
                      - duration
                      - pressure_level
                      type: object
                    type: array
                  usages:
                    items:
                      description: MemoryUsageNotifyConfig describe memory.usage_in_bytes
                        notify data
                      properties:
                        cgroups:
                          items:
                            type: string
                          type: array
                        duration:
                          description: when to handle event after receiving event
                          format: int64
                          type: integer
                        margin_mb:
                          description: the distance between limit and threshold
                          type: integer
                      required:
                      - cgroups
                      - duration
                      - margin_mb
                      type: object
                    type: array
                required:
                - pressures
                - usages
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              priority:
                format: int32
                type: integer
            required:
            - memory_cgroup
            type: object
          status:
            description: CgroupNotifyStatus is the status for a CgroupNotify resource
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: caelus
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:caelus
rules:
  - apiGroups: [""]
    resources:
    - pods
    - nodes
    - nodes/status
    verbs: ["list", "watch", "get", "update", "delete"]
  - apiGroups: [""]
    resources: ["pods/eviction"]
    verbs: ["create"]
  - apiGroups: ["caelus.io"]
    resources:
    - rulechecks
    - cgroupnotifies
    verbs: ["list", "watch", "get", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:caelus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:caelus
subjects:
  - kind: ServiceAccount
    name: caelus
    namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: caelus-json
  namespace: kube-system
data:
  caelus.json: |
    {
      "k8s_config": {
        "kubelet_root_dir": "/var/lib/kubelet"
      },
      "check_point": {
        "check_point_dir": "/var/run/caelus"
      },
      "task_type": {
        "online_type": "k8s",
        "offline_type": "k8s"
      },
      "node_resource": {
        "disable": false,
        "disable_kill_if_normal": false,
        "update_interval": "10s",
        "yarn_config": {
          "capacity_inc_interval": "1m",
          "nm_server": "http://localhost:10010",
          "nm_reserve": {
            "mem_mb": 1024
          },
          "resource_roundoff": {
            "cpu_milli": 1000,
            "mem_mb": 512
          },
          "resource_range": {
            "cpu_milli": {
              "min": 1000,
              "max": 2000,
              "ratio": 0.1
            },
            "mem_mb": {
              "min": 512,
              "max": 1024,
              "ratio": 0.1
            }
          },
          "port_auto_detect": false,
          "properties": {},
          "disks": {
            "ratio_to_core": 50,
            "disable_scheduler": true
          },
          "cpu_over_commit": {
            "enable": false,
            "over_commit_percent": 1,
            "periods": []
          }
        },
        "silence": {
          "periods": [],
          "ahead_of_unSchedule": "5m"
        }
      },
      "predicts": [{
        "disable": false,
        "predict_type": "local",
        "predict_server_addr": "",
        "reserve_resource": {
          "cpu_milli": 1000,
          "mem_mb": 5120,
          "cpu_percent": "20%",
          "mem_percent": "20%"
        }
      }],
      "metrics": {
        "node": {
          "collect_interval": "15s",
          "ifaces_with_property": [],
          "disk_names": ["sda"]
        },
        "container": {
          "resources": [
            "cpu",
            "memory"
          ],
          "cgroups": [
            "/kubepods"
          ],
          "collect_interval": "15s",
          "max_housekeeping_interval": "1m"
        },
        "perf": {
          "disable": true,
          "collect_interval": "1m",
          "collect_duration": "1s",
          "ignored_cgroups": ["/kubepods/besteffort", "/kubepods/offline"]
        },
        "rdt": {
          "disable": true,
          "rdt_command": "",
          "collect_interval": "1m",
          "collect_duration": "2s",
          "execute_interval": "2s"
        },
        "prometheus": {
          "collect_interval":"5s",
          "disable_show": true,
          "items": []
        }
      },
      "resource_isolate": {
        "disable": false,
        "resource_disable": {"netio":true, "diskio":true},
        "update_period": "1m",
        "cpu_config": {
          "auto_detect": false,
          "manage_policy": "quota",
          "cpuset_config": {
            "enable_online_isolate": false,
            "reserved_cpus": ""
          },
          "cpu_quota_config": {
            "offline_share": 102
          }
        },
        "external_components": []
      },
      "alarm": {
        "enable": false,
        "ignore_alarm_when_silence": false,
        "cluster": "",
        "message_batch": 1,
        "message_delay": "1m",
        "channel_name": "local",
        "alarm_channel": {
          "local": {
            "executor": ""
          },
          "remote": {
            "remoteWebhook": "",
            "weWorkWebhook": ""
          }
        }
      },
      "online": {
        "enable": false,
        "pid_to_cgroup": {
          "pids_check_interval": "0s",
          "cgroup_check_interval": "1m",
          "batch_num": 50
        },
        "jobs": [
          {
            "name": "",
            "command": "",
            "metrics": [
              {
                "name": "",
                "source": {
                  "check_interval": "1m",
                  "metrics_command": [],
                  "cmd_need_chroot": false,
                  "metrics_url": ""
                }
              }
            ]
          }
        ]
      },
      "disk_quota": {
        "enabled": false,
        "check_period": "3m",
        "container_runtime": "docker",
        "volume_sizes": {
          "rootFs": {
            "quota": 20480000000,
            "inodes": 10000000
          },
          "emptyDir": {},
          "hostPath": {}
        }
      }
    }
  rules.json: |
    {
      "disable": false,
      "rule_check": {
        "node_rules": [
          {
            "name": "cpu",
            "metrics": [
                "cpu_avg"
            ],
            "check_interval": "10s",
            "handle_interval": "10s",
            "recover_interval": "15s",
            "rules": [
              {
                "detects": [
                  {
                    "name": "expression",
                    "args": {
                      "expression": "auto",
                      "warning_count": 10,
                      "warning_duration": "10s"
                    }
                  }
                ],
                "actions": [
                  {
                    "name": "adjust",
                    "args": {
                      "resources": [
                        {
                          "step": "1000m"
                        }
                      ]
                    }
                  },
                  {
                    "name": "schedule",
                    "args": {}
                  }
                ]
              }
            ]
          },
          {
            "name": "memory",
            "metrics": [
                "memory_available"
            ],
            "check_interval": "10s",
            "handle_interval": "20s",
            "rules": [
              {
                "detects": [
                  {
                    "name": "expression",
                    "args": {
                      "expression": "auto",
                      "warning_count": 2
                    }
                  }
                ],
                "actions": [
                  {
                    "name": "adjust",
                    "args": {
                      "resources": [
                        {
                          "step": "1024000000"
                        }
                      ]
                    }
                  },
                  {
                    "name": "schedule",
                    "args": {}
                  }
                ]
              }
            ]
          }
        ],
        "container_rules": [
          {
            "metrics": [
                "nr_cpu_throttled"
            ],
            "check_interval": "5s",
            "handle_interval": "10s",
            "recover_interval": "15s",
            "rules": [
              {
                "detects": [
                  {
                    "name": "expression",
                    "args": {
                      "expression": "nr_cpu_throttled > 0"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "app_rules": []
      },
      "notify_config": {
        "memory_cgroup": {
          "pressures": [
            {
              "cgroups": [
                  "/kubepods/offline"
              ],
              "pressure_level": "low",
              "duration": "30ms",
              "count": 2
            }
          ],
          "usages": [
            {
              "cgroups": [
                  "/kubepods/offline/test"
              ],
              "margin_mb": 2048,
              "duration": "1m"
            }
          ]
        }
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: caelus
  namespace: kube-system
  labels:
    app: caelus
spec:
  selector:
    matchLabels:
      app: caelus
  template:
    metadata:
      labels:
        app: caelus
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '10030'
    spec:
      hostNetwork: true
      hostPID: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      serviceAccountName: caelus
      containers:
      - name: caelus
        image: ccr.ccs.tencentyun.com/caelus/caelus:v1.0.0
        imagePullPolicy: Always
        command: ["/caelus"]
        args:
        - --v=2
        - --logtostderr
        - --config=/etc/caelus/caelus.json
        - --hostname-override=$(MY_NODE_NAME)
        - --insecure-bind-address=$(MY_NODE_IP)
        - --docker=unix:///rootfs/var/run/docker.sock
        ports:
        - containerPort: 10030
          hostPort: 10030
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        securityContext:
          capabilities:
            add:
              - SYS_ADMIN
              - NET_ADMIN
              - MKNOD
              - SYS_PTRACE
              - SYS_CHROOT
              - SYS_NICE # for set cpuset
#          privileged: true
        volumeMounts:
        - name: caelus-json
          mountPath: /etc/caelus
        # cadvisor volumes
        - name: rootfs
          mountPath: /rootfs
          mountPropagation: HostToContainer
          readOnly: true
        - name: var-run-caelus
          mountPath: /var/run/caelus
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: disk
          mountPath: /dev/disk
          readOnly: true
        - name: etc
          mountPath: /etc
      volumes:
      - configMap:
          defaultMode: 420
          name: caelus-json
        name: caelus-json
      # cadvisor volumes
      - name: rootfs
        hostPath:
          path: /
      - name: var-run-caelus
        hostPath:
          path: /var/run/caelus
          type: DirectoryOrCreate
      - name: sys
        hostPath:
          path: /sys
      - name: etc
        hostPath:
          path: /etc
      - name: disk
        hostPath:
          path: /dev/disk
